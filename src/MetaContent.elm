-- Autogenerated by generate_metacontent.py
-- If only Elm had type classes...

module MetaContent exposing (..) 

import Html
import Html.App

import Content.Button as Button
import Content.Term as Term


-- MODEL

type MultiModel
    = MdlButton Button.Model
    | MdlTerm Term.Model


-- UPDATE

type MultiMsg
    = MsgButton Button.Msg
    | MsgTerm Term.Msg

mismatchError: String
mismatchError = "MetaContent.update msg model type mismatch"

update: MultiMsg -> MultiModel -> Maybe (MultiModel, Cmd MultiMsg)
update multiMsg multiModel =
    case multiMsg of
        MsgButton action ->
            case multiModel of
                MdlButton model ->
                    let
                        (model', cmd) = Button.update action model
                    in
                        Just (MdlButton model', Cmd.map MsgButton cmd)
                _ ->
                    Debug.log mismatchError Nothing
        MsgTerm action ->
            case multiModel of
                MdlTerm model ->
                    let
                        (model', cmd) = Term.update action model
                    in
                        Just (MdlTerm model', Cmd.map MsgTerm cmd)
                _ ->
                    Debug.log mismatchError Nothing


-- VIEW

view: (Int, Int) -> Int -> MultiModel -> Html.Html MultiMsg
view pos radius multiModel =
    case multiModel of
        MdlButton model ->
            Button.view pos radius model
            |> Html.App.map MsgButton
        MdlTerm model ->
            Term.view pos radius model
            |> Html.App.map MsgTerm
