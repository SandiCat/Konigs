-- Autogenerated by generate_metacontent.py
-- If only Elm had type classes...

module MetaContent exposing (..) 

import Html
import Html.App
import Content.Button as Button
import Content.Term as Term


-- MODEL

type MultiModel
    = MButton Button.Model
    | MTerm Term.Model


-- UPDATE

type MultiMsg
    = AButton Button.Msg
    | ATerm Term.Msg

mismatchError: String
mismatchError = "MetaContent.update msg model type mismatch"

update: MultiMsg -> MultiModel -> Maybe (MultiModel, Cmd MultiMsg)
update multiMsg multiModel =
    case multiMsg of
        AButton msg ->
            case multiModel of
                MButton model ->
                    let
                        (model', fx) = Button.update msg model
                    in
                        Just (MButton model', Cmd.map AButton fx)
                _ ->
                    Debug.log mismatchError Nothing
        ATerm msg ->
            case multiModel of
                MTerm model ->
                    let
                        (model', fx) = Term.update msg model
                    in
                        Just (MTerm model', Cmd.map ATerm fx)
                _ ->
                    Debug.log mismatchError Nothing


-- VIEW

view: (Int, Int) -> Int -> MultiModel -> Html.Html MultiMsg
view pos radius multiModel =
    case multiModel of
        MButton model ->
            Button.view pos radius model
            |> Html.App.map AButton
        MTerm model ->
            Term.view pos radius model
            |> Html.App.map ATerm